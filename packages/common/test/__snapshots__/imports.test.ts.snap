// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`importing module > it imports 1`] = `
{
  "CreatePostgresFormVersion": {
    "DATABASE_URL": "database-url",
    "MANUAL": "manual",
  },
  "Currency": [Function],
  "CurrencyAmount": [Function],
  "DestinationTypeID": {
    "BIGQUERY": "bigquery-v1",
    "CSV_API": "csv-api-v1",
    "GOOGLE_PUBSUB": "google-pubsub-v1",
    "GRAPHQL": "graphql-api-v1",
    "KAFKA_STREAM": "kafka-stream-v1",
    "POSTGRES_FDW": "postgres-fdw-v1",
    "REST_API": "rest-api-v1",
    "WEBHOOK": "webhook-v1",
  },
  "InvalidNetworkID": [Function],
  "MS": [Function],
  "Milliseconds": [Function],
  "NativeCurrency": [Function],
  "Networks": {
    "arbitrum-mainnet": "arbitrum-mainnet",
    "avalanche-mainnet": "avalanche-mainnet",
    "base-goerli": "base-goerli",
    "base-mainnet": "base-mainnet",
    "bsc-mainnet": "bsc-mainnet",
    "celo-mainnet": "celo-mainnet",
    "ethereum-goerli": "ethereum-goerli",
    "ethereum-mainnet": "ethereum-mainnet",
    "ethereum-rinkeby": "ethereum-rinkeby",
    "ethereum-sepolia": "ethereum-sepolia",
    "fantom-mainnet": "fantom-mainnet",
    "harmony-mainnet": "harmony-mainnet",
    "optimism-mainnet": "optimism-mainnet",
    "polygon-mainnet": "polygon-mainnet",
    "solana-mainnet": "solana-mainnet",
    "zora-mainnet": "zora-mainnet",
  },
  "NodeEnv": {
    "Development": "development",
    "Production": "production",
    "Test": "test",
  },
  "NonNativeCurrency": [Function],
  "SourceTypeID": {
    "EVM_CONTRACT": "evm-contract-v1",
    "EVM_EOA": "evm-eoa-v1",
    "EVM_NFT_CONTRACT": "evm-nft-contract-v1",
    "FARCASTER_HUB": "farcaster-hub",
    "NFT_MARKETPLACE": "nft-marketplace-v1",
    "OFFCHAIN_NFT_METADATA": "offchain-nft-metadata",
  },
  "WrappedNativeCurrency": [Function],
  "allDestinationTypes": {
    "bigquery-v1": {
      "available": false,
      "id": "bigquery-v1",
      "name": "Google BigQuery",
    },
    "csv-api-v1": {
      "available": false,
      "id": "csv-api-v1",
      "name": "CSV Download Link",
    },
    "google-pubsub-v1": {
      "available": false,
      "id": "google-pubsub-v1",
      "name": "Google Pubsub",
    },
    "graphql-api-v1": {
      "available": false,
      "id": "graphql-api-v1",
      "name": "GraphQL API",
    },
    "kafka-stream-v1": {
      "available": false,
      "id": "kafka-stream-v1",
      "name": "Kafka Stream",
    },
    "postgres-fdw-v1": {
      "available": true,
      "id": "postgres-fdw-v1",
      "name": "Postgres Foreign Data Wrapper",
    },
    "rest-api-v1": {
      "available": false,
      "id": "rest-api-v1",
      "name": "REST API",
    },
    "webhook-v1": {
      "available": false,
      "id": "webhook-v1",
      "name": "Webhook",
    },
  },
  "allSourceTypes": {
    "evm-contract-v1": {
      "available": true,
      "id": "evm-contract-v1",
      "name": "EVM Contract",
    },
    "evm-eoa-v1": {
      "available": false,
      "id": "evm-eoa-v1",
      "name": "EVM EOA",
    },
    "evm-nft-contract-v1": {
      "available": false,
      "id": "evm-nft-contract-v1",
      "name": "EVM NFT Contract",
    },
    "farcaster-hub": {
      "available": false,
      "id": "farcaster-hub",
      "name": "Farcaster Hub",
    },
    "nft-marketplace-v1": {
      "available": false,
      "id": "nft-marketplace-v1",
      "name": "NFT Marketplace Data",
    },
    "offchain-nft-metadata": {
      "available": false,
      "id": "offchain-nft-metadata",
      "name": "Offchain NFT Metadata",
    },
  },
  "deduplicateArrayOfObjects": [Function],
  "deepEqual": [Function],
  "deepMerge": [Function],
  "envifyNetwork": [Function],
  "extractToken": [Function],
  "filterFound": [Function],
  "found": [Function],
  "getAuthCookieName": [Function],
  "getTokenFromHeaders": [Function],
  "groupBy": [Function],
  "humanizeLabel": [Function],
  "humanizeNetworkID": [Function],
  "inflection": {
    "camelize": [Function],
    "capitalize": [Function],
    "classify": [Function],
    "dasherize": [Function],
    "demodulize": [Function],
    "foreignKey": [Function],
    "humanize": [Function],
    "inflect": [Function],
    "ordinalize": [Function],
    "pluralize": [Function],
    "singularize": [Function],
    "tableize": [Function],
    "titleize": [Function],
    "transform": [Function],
    "underscore": [Function],
  },
  "isObjectContainingAtLeastOneKey": [Function],
  "isUndefined": [Function],
  "isValidNetworkID": [Function],
  "last": [Function],
  "listToProse": [Function],
  "notFound": [Function],
  "objectWithoutNullishValues": [Function],
  "parseNetworkID": [Function],
  "pick": [Function],
  "pluralize": [Function],
  "pluralizeNoun": [Function],
  "reshapeBy": [Function],
  "safeParseInt": [Function],
  "sample": [Function],
  "slugify": [Function],
  "truncateJsonBlob": [Function],
  "unixTimestampToDate": [Function],
  "urlSlugify": [Function],
}
`;
